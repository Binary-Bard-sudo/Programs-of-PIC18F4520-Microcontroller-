

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Mar 27 19:10:36 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000FE0                     bsr             equ	4064
    59   000FE9                     fsr0            equ	4073
    60   000FEA                     fsr0h           equ	4074
    61   000FE9                     fsr0l           equ	4073
    62   000FE1                     fsr1            equ	4065
    63   000FE2                     fsr1h           equ	4066
    64   000FE1                     fsr1l           equ	4065
    65   000FD9                     fsr2            equ	4057
    66   000FDA                     fsr2h           equ	4058
    67   000FD9                     fsr2l           equ	4057
    68   000FEF                     indf0           equ	4079
    69   000FE7                     indf1           equ	4071
    70   000FDF                     indf2           equ	4063
    71   000FF2                     intcon          equ	4082
    72   000000                     nvmcon          equ	0
    73   000FF9                     pcl             equ	4089
    74   000FFA                     pclath          equ	4090
    75   000FFB                     pclatu          equ	4091
    76   000FEB                     plusw0          equ	4075
    77   000FE3                     plusw1          equ	4067
    78   000FDB                     plusw2          equ	4059
    79   000FED                     postdec0        equ	4077
    80   000FE5                     postdec1        equ	4069
    81   000FDD                     postdec2        equ	4061
    82   000FEE                     postinc0        equ	4078
    83   000FE6                     postinc1        equ	4070
    84   000FDE                     postinc2        equ	4062
    85   000FEC                     preinc0         equ	4076
    86   000FE4                     preinc1         equ	4068
    87   000FDC                     preinc2         equ	4060
    88   000FF3                     prod            equ	4083
    89   000FF4                     prodh           equ	4084
    90   000FF3                     prodl           equ	4083
    91   000FD8                     status          equ	4056
    92   000FF5                     tablat          equ	4085
    93   000FF6                     tblptr          equ	4086
    94   000FF7                     tblptrh         equ	4087
    95   000FF6                     tblptrl         equ	4086
    96   000FF8                     tblptru         equ	4088
    97   000FFD                     tosl            equ	4093
    98   000FE8                     wreg            equ	4072
    99   000F80                     PORTA           equ	3968	;# 
   100   000F81                     PORTB           equ	3969	;# 
   101   000F82                     PORTC           equ	3970	;# 
   102   000F83                     PORTD           equ	3971	;# 
   103   000F84                     PORTE           equ	3972	;# 
   104   000F89                     LATA            equ	3977	;# 
   105   000F8A                     LATB            equ	3978	;# 
   106   000F8B                     LATC            equ	3979	;# 
   107   000F8C                     LATD            equ	3980	;# 
   108   000F8D                     LATE            equ	3981	;# 
   109   000F92                     TRISA           equ	3986	;# 
   110   000F92                     DDRA            equ	3986	;# 
   111   000F93                     TRISB           equ	3987	;# 
   112   000F93                     DDRB            equ	3987	;# 
   113   000F94                     TRISC           equ	3988	;# 
   114   000F94                     DDRC            equ	3988	;# 
   115   000F95                     TRISD           equ	3989	;# 
   116   000F95                     DDRD            equ	3989	;# 
   117   000F96                     TRISE           equ	3990	;# 
   118   000F96                     DDRE            equ	3990	;# 
   119   000F9B                     OSCTUNE         equ	3995	;# 
   120   000F9D                     PIE1            equ	3997	;# 
   121   000F9E                     PIR1            equ	3998	;# 
   122   000F9F                     IPR1            equ	3999	;# 
   123   000FA0                     PIE2            equ	4000	;# 
   124   000FA1                     PIR2            equ	4001	;# 
   125   000FA2                     IPR2            equ	4002	;# 
   126   000FA6                     EECON1          equ	4006	;# 
   127   000FA7                     EECON2          equ	4007	;# 
   128   000FA8                     EEDATA          equ	4008	;# 
   129   000FA9                     EEADR           equ	4009	;# 
   130   000FAB                     RCSTA           equ	4011	;# 
   131   000FAB                     RCSTA1          equ	4011	;# 
   132   000FAC                     TXSTA           equ	4012	;# 
   133   000FAC                     TXSTA1          equ	4012	;# 
   134   000FAD                     TXREG           equ	4013	;# 
   135   000FAD                     TXREG1          equ	4013	;# 
   136   000FAE                     RCREG           equ	4014	;# 
   137   000FAE                     RCREG1          equ	4014	;# 
   138   000FAF                     SPBRG           equ	4015	;# 
   139   000FAF                     SPBRG1          equ	4015	;# 
   140   000FB0                     SPBRGH          equ	4016	;# 
   141   000FB1                     T3CON           equ	4017	;# 
   142   000FB2                     TMR3            equ	4018	;# 
   143   000FB2                     TMR3L           equ	4018	;# 
   144   000FB3                     TMR3H           equ	4019	;# 
   145   000FB4                     CMCON           equ	4020	;# 
   146   000FB5                     CVRCON          equ	4021	;# 
   147   000FB6                     ECCP1AS         equ	4022	;# 
   148   000FB6                     ECCPAS          equ	4022	;# 
   149   000FB7                     PWM1CON         equ	4023	;# 
   150   000FB7                     ECCP1DEL        equ	4023	;# 
   151   000FB8                     BAUDCON         equ	4024	;# 
   152   000FB8                     BAUDCTL         equ	4024	;# 
   153   000FBA                     CCP2CON         equ	4026	;# 
   154   000FBB                     CCPR2           equ	4027	;# 
   155   000FBB                     CCPR2L          equ	4027	;# 
   156   000FBC                     CCPR2H          equ	4028	;# 
   157   000FBD                     CCP1CON         equ	4029	;# 
   158   000FBE                     CCPR1           equ	4030	;# 
   159   000FBE                     CCPR1L          equ	4030	;# 
   160   000FBF                     CCPR1H          equ	4031	;# 
   161   000FC0                     ADCON2          equ	4032	;# 
   162   000FC1                     ADCON1          equ	4033	;# 
   163   000FC2                     ADCON0          equ	4034	;# 
   164   000FC3                     ADRES           equ	4035	;# 
   165   000FC3                     ADRESL          equ	4035	;# 
   166   000FC4                     ADRESH          equ	4036	;# 
   167   000FC5                     SSPCON2         equ	4037	;# 
   168   000FC6                     SSPCON1         equ	4038	;# 
   169   000FC7                     SSPSTAT         equ	4039	;# 
   170   000FC8                     SSPADD          equ	4040	;# 
   171   000FC9                     SSPBUF          equ	4041	;# 
   172   000FCA                     T2CON           equ	4042	;# 
   173   000FCB                     PR2             equ	4043	;# 
   174   000FCB                     MEMCON          equ	4043	;# 
   175   000FCC                     TMR2            equ	4044	;# 
   176   000FCD                     T1CON           equ	4045	;# 
   177   000FCE                     TMR1            equ	4046	;# 
   178   000FCE                     TMR1L           equ	4046	;# 
   179   000FCF                     TMR1H           equ	4047	;# 
   180   000FD0                     RCON            equ	4048	;# 
   181   000FD1                     WDTCON          equ	4049	;# 
   182   000FD2                     HLVDCON         equ	4050	;# 
   183   000FD2                     LVDCON          equ	4050	;# 
   184   000FD3                     OSCCON          equ	4051	;# 
   185   000FD5                     T0CON           equ	4053	;# 
   186   000FD6                     TMR0            equ	4054	;# 
   187   000FD6                     TMR0L           equ	4054	;# 
   188   000FD7                     TMR0H           equ	4055	;# 
   189   000FD8                     STATUS          equ	4056	;# 
   190   000FD9                     FSR2            equ	4057	;# 
   191   000FD9                     FSR2L           equ	4057	;# 
   192   000FDA                     FSR2H           equ	4058	;# 
   193   000FDB                     PLUSW2          equ	4059	;# 
   194   000FDC                     PREINC2         equ	4060	;# 
   195   000FDD                     POSTDEC2        equ	4061	;# 
   196   000FDE                     POSTINC2        equ	4062	;# 
   197   000FDF                     INDF2           equ	4063	;# 
   198   000FE0                     BSR             equ	4064	;# 
   199   000FE1                     FSR1            equ	4065	;# 
   200   000FE1                     FSR1L           equ	4065	;# 
   201   000FE2                     FSR1H           equ	4066	;# 
   202   000FE3                     PLUSW1          equ	4067	;# 
   203   000FE4                     PREINC1         equ	4068	;# 
   204   000FE5                     POSTDEC1        equ	4069	;# 
   205   000FE6                     POSTINC1        equ	4070	;# 
   206   000FE7                     INDF1           equ	4071	;# 
   207   000FE8                     WREG            equ	4072	;# 
   208   000FE9                     FSR0            equ	4073	;# 
   209   000FE9                     FSR0L           equ	4073	;# 
   210   000FEA                     FSR0H           equ	4074	;# 
   211   000FEB                     PLUSW0          equ	4075	;# 
   212   000FEC                     PREINC0         equ	4076	;# 
   213   000FED                     POSTDEC0        equ	4077	;# 
   214   000FEE                     POSTINC0        equ	4078	;# 
   215   000FEF                     INDF0           equ	4079	;# 
   216   000FF0                     INTCON3         equ	4080	;# 
   217   000FF1                     INTCON2         equ	4081	;# 
   218   000FF2                     INTCON          equ	4082	;# 
   219   000FF3                     PROD            equ	4083	;# 
   220   000FF3                     PRODL           equ	4083	;# 
   221   000FF4                     PRODH           equ	4084	;# 
   222   000FF5                     TABLAT          equ	4085	;# 
   223   000FF6                     TBLPTR          equ	4086	;# 
   224   000FF6                     TBLPTRL         equ	4086	;# 
   225   000FF7                     TBLPTRH         equ	4087	;# 
   226   000FF8                     TBLPTRU         equ	4088	;# 
   227   000FF9                     PCLAT           equ	4089	;# 
   228   000FF9                     PC              equ	4089	;# 
   229   000FF9                     PCL             equ	4089	;# 
   230   000FFA                     PCLATH          equ	4090	;# 
   231   000FFB                     PCLATU          equ	4091	;# 
   232   000FFC                     STKPTR          equ	4092	;# 
   233   000FFD                     TOS             equ	4093	;# 
   234   000FFD                     TOSL            equ	4093	;# 
   235   000FFE                     TOSH            equ	4094	;# 
   236   000FFF                     TOSU            equ	4095	;# 
   237   007F81                     _INT2IF         set	32641
   238   007F80                     _INT1IF         set	32640
   239   007F91                     _INT0IF         set	32657
   240   007F84                     _INT2IE         set	32644
   241   007F83                     _INT1IE         set	32643
   242   007F94                     _INT0IE         set	32660
   243   007F97                     _GIE            set	32663
   244   000FF0                     _INTCON3        set	4080
   245   000FF1                     _INTCON2        set	4081
   246   000F82                     _PORTC          set	3970
   247   000F94                     _TRISC          set	3988
   248   000F93                     _TRISB          set	3987
   249   000F95                     _TRISD          set	3989
   250   000FC1                     _ADCON1         set	4033
   251   000FD3                     _OSCCON         set	4051
   252   000F81                     _PORTBbits      set	3969
   253   000FF0                     _INTCON3bits    set	4080
   254   000FF2                     _INTCONbits     set	4082
   255   000F82                     _PORTCbits      set	3970
   256   000F83                     _PORTD          set	3971
   257                           
   258                           	psect	smallconst
   259   000600                     __psmallconst:
   260                           	callstack 0
   261   000600  00                 	db	0
   262   000601                     STR_1:
   263   000601  52                 	db	82	;'R'
   264   000602  49                 	db	73	;'I'
   265   000603  54                 	db	84	;'T'
   266   000604  20                 	db	32
   267   000605  57                 	db	87	;'W'
   268   000606  45                 	db	69	;'E'
   269   000607  4C                 	db	76	;'L'
   270   000608  43                 	db	67	;'C'
   271   000609  4F                 	db	79	;'O'
   272   00060A  4D                 	db	77	;'M'
   273   00060B  45                 	db	69	;'E'
   274   00060C  53                 	db	83	;'S'
   275   00060D  20                 	db	32
   276   00060E  59                 	db	89	;'Y'
   277   00060F  4F                 	db	79	;'O'
   278   000610  55                 	db	85	;'U'
   279   000611  00                 	db	0
   280   000612  00                 	db	0	; dummy byte at the end
   281   000001                     __activetblptr  equ	1
   282                           
   283                           ; #config settings
   284                           
   285                           	psect	cinit
   286   000958                     __pcinit:
   287                           	callstack 0
   288   000958                     start_initialization:
   289                           	callstack 0
   290   000958                     __initialization:
   291                           	callstack 0
   292   000958                     end_of_initialization:
   293                           	callstack 0
   294   000958                     __end_of__initialization:
   295                           	callstack 0
   296   000958  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   297   00095A  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   298   00095C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   299   00095E  6EF8               	movwf	tblptru,c
   300   000960  0E06               	movlw	high __Lsmallconst
   301   000962  6EF7               	movwf	tblptrh,c
   302   000964  0100               	movlb	0
   303   000966  EF4A  F004         	goto	_main	;jump to C main() function
   304                           
   305                           	psect	cstackCOMRAM
   306   000001                     __pcstackCOMRAM:
   307                           	callstack 0
   308   000001                     i2lcdcmd@command:
   309                           	callstack 0
   310   000001                     i2lcddata@data:
   311                           	callstack 0
   312   000001                     
   313                           ; 1 bytes @ 0x0
   314   000001                     	ds	1
   315   000002                     ??_key_detect:
   316                           
   317                           ; 1 bytes @ 0x1
   318   000002                     	ds	2
   319   000004                     lcdcmd@command:
   320                           	callstack 0
   321   000004                     lcddata@data:
   322                           	callstack 0
   323   000004                     
   324                           ; 1 bytes @ 0x3
   325   000004                     	ds	1
   326   000005                     lcd_string@Spointer:
   327                           	callstack 0
   328   000005                     ??_lcdinit:
   329                           
   330                           ; 1 bytes @ 0x4
   331   000005                     	ds	1
   332   000006                     
   333                           ; 1 bytes @ 0x5
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 244 in file "newmain.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   353 ;;      Params:         0       0       0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0       0       0
   355 ;;      Temps:          0       0       0       0       0       0       0
   356 ;;      Totals:         0       0       0       0       0       0       0
   357 ;;Total ram usage:        0 bytes
   358 ;; Hardware stack levels required when called: 5
   359 ;; This function calls:
   360 ;;		_lcd_string
   361 ;;		_lcdinit
   362 ;; This function is called by:
   363 ;;		Startup code after reset
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           	psect	text0
   368   000894                     __ptext0:
   369                           	callstack 0
   370   000894                     _main:
   371                           	callstack 26
   372   000894                     
   373                           ;newmain.c: 247: OSCCON=0xEF;
   374   000894  0EEF               	movlw	239
   375   000896  6ED3               	movwf	211,c	;volatile
   376                           
   377                           ;newmain.c: 248: ADCON1=0X0F;
   378   000898  0E0F               	movlw	15
   379   00089A  6EC1               	movwf	193,c	;volatile
   380   00089C                     
   381                           ;newmain.c: 249: TRISD=0X00;
   382   00089C  6A95               	clrf	149,c	;volatile
   383                           
   384                           ;newmain.c: 250: TRISB=0X0F;
   385   00089E  0E0F               	movlw	15
   386   0008A0  6E93               	movwf	147,c	;volatile
   387   0008A2                     
   388                           ;newmain.c: 251: TRISC=0X00;
   389   0008A2  6A94               	clrf	148,c	;volatile
   390   0008A4                     
   391                           ;newmain.c: 252: PORTD=0X00;
   392   0008A4  6A83               	clrf	131,c	;volatile
   393   0008A6                     
   394                           ;newmain.c: 253: PORTC=0X00;
   395   0008A6  6A82               	clrf	130,c	;volatile
   396   0008A8                     
   397                           ;newmain.c: 254: PORTCbits.RC2=0;
   398   0008A8  9482               	bcf	130,2,c	;volatile
   399                           
   400                           ;newmain.c: 255: INTCON2=0x84;
   401   0008AA  0E84               	movlw	132
   402   0008AC  6EF1               	movwf	241,c	;volatile
   403                           
   404                           ;newmain.c: 256: INTCON3=0xF8;
   405   0008AE  0EF8               	movlw	248
   406   0008B0  6EF0               	movwf	240,c	;volatile
   407   0008B2                     
   408                           ;newmain.c: 258: INTCONbits.INT0IF=0;
   409   0008B2  92F2               	bcf	242,1,c	;volatile
   410   0008B4                     
   411                           ;newmain.c: 259: INTCONbits.INT0IE=1;
   412   0008B4  88F2               	bsf	242,4,c	;volatile
   413   0008B6                     
   414                           ;newmain.c: 260: INTCONbits.GIE=1;
   415   0008B6  8EF2               	bsf	242,7,c	;volatile
   416   0008B8                     
   417                           ;newmain.c: 262: PORTBbits.RB4=0;
   418   0008B8  9881               	bcf	129,4,c	;volatile
   419   0008BA                     
   420                           ;newmain.c: 263: PORTBbits.RB5=0;
   421   0008BA  9A81               	bcf	129,5,c	;volatile
   422   0008BC                     
   423                           ;newmain.c: 264: PORTBbits.RB6=0;
   424   0008BC  9C81               	bcf	129,6,c	;volatile
   425   0008BE                     
   426                           ;newmain.c: 265: PORTBbits.RB7=0;
   427   0008BE  9E81               	bcf	129,7,c	;volatile
   428   0008C0                     
   429                           ;newmain.c: 266: lcdinit();
   430   0008C0  EC1D  F004         	call	_lcdinit	;wreg free
   431   0008C4                     
   432                           ;newmain.c: 267: lcd_string("RIT WELCOMES YOU");
   433   0008C4  0E01               	movlw	low STR_1
   434   0008C6  6E05               	movwf	lcd_string@Spointer^0,c
   435   0008C8  EC6A  F004         	call	_lcd_string	;wreg free
   436   0008CC                     l92:
   437   0008CC  EF66  F004         	goto	l92
   438   0008D0  EF07  F000         	goto	start
   439   0008D4                     __end_of_main:
   440                           	callstack 0
   441                           
   442 ;; *************** function _lcdinit *****************
   443 ;; Defined at:
   444 ;;		line 84 in file "newmain.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   458 ;;      Params:         0       0       0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0       0       0
   460 ;;      Temps:          1       0       0       0       0       0       0
   461 ;;      Totals:         1       0       0       0       0       0       0
   462 ;;Total ram usage:        1 bytes
   463 ;; Hardware stack levels used: 1
   464 ;; Hardware stack levels required when called: 4
   465 ;; This function calls:
   466 ;;		_lcdcmd
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text1
   473   00083A                     __ptext1:
   474                           	callstack 0
   475   00083A                     _lcdinit:
   476                           	callstack 26
   477   00083A                     
   478                           ;newmain.c: 86:  lcdcmd(0x01);
   479   00083A  0E01               	movlw	1
   480   00083C  EC80  F004         	call	_lcdcmd
   481   000840                     
   482                           ;newmain.c: 87:  _delay((unsigned long)((80)*(4000000/4000.0)));
   483   000840  0E68               	movlw	104
   484   000842  6E05               	movwf	??_lcdinit^0,c
   485   000844  0EE4               	movlw	228
   486   000846                     u397:
   487   000846  2EE8               	decfsz	wreg,f,c
   488   000848  D7FE               	bra	u397
   489   00084A  2E05               	decfsz	??_lcdinit^0,f,c
   490   00084C  D7FC               	bra	u397
   491   00084E  D000               	nop2	
   492   000850                     
   493                           ;newmain.c: 88:  lcdcmd(0x38);
   494   000850  0E38               	movlw	56
   495   000852  EC80  F004         	call	_lcdcmd
   496                           
   497                           ;newmain.c: 89:  _delay((unsigned long)((10)*(4000000/4000.0)));
   498   000856  0E0D               	movlw	13
   499   000858  6E05               	movwf	??_lcdinit^0,c
   500   00085A  0EFC               	movlw	252
   501   00085C                     u407:
   502   00085C  2EE8               	decfsz	wreg,f,c
   503   00085E  D7FE               	bra	u407
   504   000860  2E05               	decfsz	??_lcdinit^0,f,c
   505   000862  D7FC               	bra	u407
   506   000864                     
   507                           ;newmain.c: 90:          lcdcmd(0x0C);
   508   000864  0E0C               	movlw	12
   509   000866  EC80  F004         	call	_lcdcmd
   510   00086A                     
   511                           ;newmain.c: 91:  _delay((unsigned long)((10)*(4000000/4000.0)));
   512   00086A  0E0D               	movlw	13
   513   00086C  6E05               	movwf	??_lcdinit^0,c
   514   00086E  0EFC               	movlw	252
   515   000870                     u417:
   516   000870  2EE8               	decfsz	wreg,f,c
   517   000872  D7FE               	bra	u417
   518   000874  2E05               	decfsz	??_lcdinit^0,f,c
   519   000876  D7FC               	bra	u417
   520                           
   521                           ;newmain.c: 92:  lcdcmd(0x06);
   522   000878  0E06               	movlw	6
   523   00087A  EC80  F004         	call	_lcdcmd
   524   00087E                     
   525                           ;newmain.c: 93:  _delay((unsigned long)((10)*(4000000/4000.0)));
   526   00087E  0E0D               	movlw	13
   527   000880  6E05               	movwf	??_lcdinit^0,c
   528   000882  0EFC               	movlw	252
   529   000884                     u427:
   530   000884  2EE8               	decfsz	wreg,f,c
   531   000886  D7FE               	bra	u427
   532   000888  2E05               	decfsz	??_lcdinit^0,f,c
   533   00088A  D7FC               	bra	u427
   534   00088C                     
   535                           ;newmain.c: 94:  lcdcmd(0x80);
   536   00088C  0E80               	movlw	128
   537   00088E  EC80  F004         	call	_lcdcmd
   538   000892  0012               	return		;funcret
   539   000894                     __end_of_lcdinit:
   540                           	callstack 0
   541                           
   542 ;; *************** function _lcdcmd *****************
   543 ;; Defined at:
   544 ;;		line 65 in file "newmain.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;  command         1    wreg     unsigned char 
   547 ;; Auto vars:     Size  Location     Type
   548 ;;  command         1    3[COMRAM] unsigned char 
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, status,2, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   558 ;;      Params:         0       0       0       0       0       0       0
   559 ;;      Locals:         1       0       0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0       0       0
   561 ;;      Totals:         1       0       0       0       0       0       0
   562 ;;Total ram usage:        1 bytes
   563 ;; Hardware stack levels used: 1
   564 ;; Hardware stack levels required when called: 3
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_lcdinit
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text2
   573   000900                     __ptext2:
   574                           	callstack 0
   575   000900                     _lcdcmd:
   576                           	callstack 26
   577                           
   578                           ;incstack = 0
   579                           ;lcdcmd@command stored from wreg
   580   000900  6E04               	movwf	lcdcmd@command^0,c
   581   000902                     
   582                           ;newmain.c: 65: void lcdcmd(unsigned char command);newmain.c: 66: {;newmain.c: 67:  PORT
      +                          D=command;
   583   000902  C004  FF83         	movff	lcdcmd@command,3971	;volatile
   584   000906                     
   585                           ;newmain.c: 68:  PORTCbits.RC1=0;
   586   000906  9282               	bcf	130,1,c	;volatile
   587   000908                     
   588                           ;newmain.c: 69:  PORTCbits.RC3=1;
   589   000908  8682               	bsf	130,3,c	;volatile
   590   00090A                     
   591                           ;newmain.c: 70:  _delay((unsigned long)((1)*(4000000/4000.0)));
   592   00090A  0EC8               	movlw	200
   593   00090C                     u437:
   594   00090C  D000               	nop2	
   595   00090E  2EE8               	decfsz	wreg,f,c
   596   000910  D7FD               	bra	u437
   597   000912                     
   598                           ;newmain.c: 71:  PORTCbits.RC3=0;
   599   000912  9682               	bcf	130,3,c	;volatile
   600   000914  0012               	return		;funcret
   601   000916                     __end_of_lcdcmd:
   602                           	callstack 0
   603                           
   604 ;; *************** function _lcd_string *****************
   605 ;; Defined at:
   606 ;;		line 56 in file "newmain.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  Spointer        1    4[COMRAM] PTR unsigned char 
   609 ;;		 -> STR_1(17), 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   621 ;;      Params:         1       0       0       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0       0       0
   624 ;;      Totals:         1       0       0       0       0       0       0
   625 ;;Total ram usage:        1 bytes
   626 ;; Hardware stack levels used: 1
   627 ;; Hardware stack levels required when called: 4
   628 ;; This function calls:
   629 ;;		_lcddata
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text3
   636   0008D4                     __ptext3:
   637                           	callstack 0
   638   0008D4                     _lcd_string:
   639                           	callstack 26
   640   0008D4                     
   641                           ;newmain.c: 56: void lcd_string(unsigned char *Spointer);newmain.c: 57: {;newmain.c: 58:
      +                            while(*Spointer)
   642   0008D4  EF73  F004         	goto	l961
   643   0008D8                     l957:
   644                           
   645                           ;newmain.c: 59:     {;newmain.c: 60:      lcddata(*Spointer);
   646   0008D8  C005  FFF6         	movff	lcd_string@Spointer,tblptrl
   647   0008DC                     	if	0	;There is only one active tblptr byte
   648   0008DC                     	endif
   649   0008DC                     	if	0	;tblptru may be non-zero
   650   0008DC                     	endif
   651   0008DC                     	if	0	;tblptru may be non-zero
   652   0008DC                     	endif
   653   0008DC  0008               	tblrd		*
   654   0008DE  50F5               	movf	tablat,w,c
   655   0008E0  EC8B  F004         	call	_lcddata
   656   0008E4                     
   657                           ;newmain.c: 61:   Spointer++;
   658   0008E4  2A05               	incf	lcd_string@Spointer^0,f,c
   659   0008E6                     l961:
   660                           
   661                           ;newmain.c: 58:  while(*Spointer)
   662   0008E6  C005  FFF6         	movff	lcd_string@Spointer,tblptrl
   663   0008EA                     	if	0	;There is only one active tblptr byte
   664   0008EA                     	endif
   665   0008EA                     	if	0	;tblptru may be non-zero
   666   0008EA                     	endif
   667   0008EA                     	if	0	;tblptru may be non-zero
   668   0008EA                     	endif
   669   0008EA  0008               	tblrd		*
   670   0008EC  50F5               	movf	tablat,w,c
   671   0008EE  0900               	iorlw	0
   672   0008F0  A4D8               	btfss	status,2,c
   673   0008F2  EF7D  F004         	goto	u201
   674   0008F6  EF7F  F004         	goto	u200
   675   0008FA                     u201:
   676   0008FA  EF6C  F004         	goto	l957
   677   0008FE                     u200:
   678   0008FE  0012               	return		;funcret
   679   000900                     __end_of_lcd_string:
   680                           	callstack 0
   681                           
   682 ;; *************** function _lcddata *****************
   683 ;; Defined at:
   684 ;;		line 75 in file "newmain.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  data            1    wreg     unsigned char 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  data            1    3[COMRAM] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   698 ;;      Params:         0       0       0       0       0       0       0
   699 ;;      Locals:         1       0       0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0
   701 ;;      Totals:         1       0       0       0       0       0       0
   702 ;;Total ram usage:        1 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 3
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_lcd_string
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text4
   713   000916                     __ptext4:
   714                           	callstack 0
   715   000916                     _lcddata:
   716                           	callstack 26
   717                           
   718                           ;incstack = 0
   719                           ;lcddata@data stored from wreg
   720   000916  6E04               	movwf	lcddata@data^0,c
   721   000918                     
   722                           ;newmain.c: 75: void lcddata(unsigned char data);newmain.c: 76: {;newmain.c: 77:  PORTD=
      +                          data;
   723   000918  C004  FF83         	movff	lcddata@data,3971	;volatile
   724   00091C                     
   725                           ;newmain.c: 78:  PORTCbits.RC1=1;
   726   00091C  8282               	bsf	130,1,c	;volatile
   727   00091E                     
   728                           ;newmain.c: 79:  PORTCbits.RC3=1;
   729   00091E  8682               	bsf	130,3,c	;volatile
   730   000920                     
   731                           ;newmain.c: 80:  _delay((unsigned long)((1)*(4000000/4000.0)));
   732   000920  0EC8               	movlw	200
   733   000922                     u447:
   734   000922  D000               	nop2	
   735   000924  2EE8               	decfsz	wreg,f,c
   736   000926  D7FD               	bra	u447
   737   000928                     
   738                           ;newmain.c: 81:  PORTCbits.RC3=0;
   739   000928  9682               	bcf	130,3,c	;volatile
   740   00092A  0012               	return		;funcret
   741   00092C                     __end_of_lcddata:
   742                           	callstack 0
   743                           
   744 ;; *************** function _my_routine *****************
   745 ;; Defined at:
   746 ;;		line 97 in file "newmain.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, status,2, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   760 ;;      Params:         0       0       0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0       0       0
   763 ;;      Totals:         0       0       0       0       0       0       0
   764 ;;Total ram usage:        0 bytes
   765 ;; Hardware stack levels used: 1
   766 ;; Hardware stack levels required when called: 2
   767 ;; This function calls:
   768 ;;		_key_detect
   769 ;; This function is called by:
   770 ;;		Interrupt level 2
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	intcode
   775   000008                     __pintcode:
   776                           	callstack 0
   777   000008                     _my_routine:
   778                           	callstack 26
   779                           
   780                           ;incstack = 0
   781   000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   782   00000A  EDEA  F003         	call	int_func,f	;refresh shadow registers
   783                           
   784                           	psect	intcode_body
   785   0007D4                     __pintcode_body:
   786                           	callstack 26
   787   0007D4                     int_func:
   788                           	callstack 26
   789   0007D4  0006               	pop		; remove dummy address from shadow register refresh
   790   0007D6                     
   791                           ;newmain.c: 100:      if(INTCONbits.INT0IF==1 && INTCONbits.INT0IE==1)
   792   0007D6  A2F2               	btfss	242,1,c	;volatile
   793   0007D8  EFF0  F003         	goto	i2u33_41
   794   0007DC  EFF2  F003         	goto	i2u33_40
   795   0007E0                     i2u33_41:
   796   0007E0  EFFB  F003         	goto	i2l1023
   797   0007E4                     i2u33_40:
   798   0007E4  A8F2               	btfss	242,4,c	;volatile
   799   0007E6  EFF7  F003         	goto	i2u34_41
   800   0007EA  EFF9  F003         	goto	i2u34_40
   801   0007EE                     i2u34_41:
   802   0007EE  EFFB  F003         	goto	i2l1023
   803   0007F2                     i2u34_40:
   804   0007F2                     
   805                           ;newmain.c: 101:   {;newmain.c: 102:      key_detect();
   806   0007F2  EC0A  F003         	call	_key_detect	;wreg free
   807   0007F6                     i2l1023:
   808                           
   809                           ;newmain.c: 104:    if(INTCON3bits.INT1IF==1 && INTCON3bits.INT1IE==1)
   810   0007F6  A0F0               	btfss	240,0,c	;volatile
   811   0007F8  EF00  F004         	goto	i2u35_41
   812   0007FC  EF02  F004         	goto	i2u35_40
   813   000800                     i2u35_41:
   814   000800  EF0B  F004         	goto	i2l1029
   815   000804                     i2u35_40:
   816   000804  A6F0               	btfss	240,3,c	;volatile
   817   000806  EF07  F004         	goto	i2u36_41
   818   00080A  EF09  F004         	goto	i2u36_40
   819   00080E                     i2u36_41:
   820   00080E  EF0B  F004         	goto	i2l1029
   821   000812                     i2u36_40:
   822   000812                     
   823                           ;newmain.c: 105:   {;newmain.c: 106:  key_detect();
   824   000812  EC0A  F003         	call	_key_detect	;wreg free
   825   000816                     i2l1029:
   826                           
   827                           ;newmain.c: 108:    if(INTCON3bits.INT2IF==1 && INTCON3bits.INT2IE==1 )
   828   000816  A2F0               	btfss	240,1,c	;volatile
   829   000818  EF10  F004         	goto	i2u37_41
   830   00081C  EF12  F004         	goto	i2u37_40
   831   000820                     i2u37_41:
   832   000820  EF1B  F004         	goto	i2l69
   833   000824                     i2u37_40:
   834   000824  A8F0               	btfss	240,4,c	;volatile
   835   000826  EF17  F004         	goto	i2u38_41
   836   00082A  EF19  F004         	goto	i2u38_40
   837   00082E                     i2u38_41:
   838   00082E  EF1B  F004         	goto	i2l69
   839   000832                     i2u38_40:
   840   000832                     
   841                           ;newmain.c: 109:   {;newmain.c: 110:  key_detect();
   842   000832  EC0A  F003         	call	_key_detect	;wreg free
   843   000836                     i2l69:
   844   000836  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   845   000838  0011               	retfie		f
   846   00083A                     __end_of_my_routine:
   847                           	callstack 0
   848                           
   849 ;; *************** function _key_detect *****************
   850 ;; Defined at:
   851 ;;		line 115 in file "newmain.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, status,2, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   865 ;;      Params:         0       0       0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0       0       0
   867 ;;      Temps:          2       0       0       0       0       0       0
   868 ;;      Totals:         2       0       0       0       0       0       0
   869 ;;Total ram usage:        2 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; Hardware stack levels required when called: 1
   872 ;; This function calls:
   873 ;;		i2_lcdcmd
   874 ;;		i2_lcddata
   875 ;; This function is called by:
   876 ;;		_my_routine
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text6
   881   000614                     __ptext6:
   882                           	callstack 0
   883   000614                     _key_detect:
   884                           	callstack 26
   885   000614                     
   886                           ;newmain.c: 117:     GIE=0;
   887   000614  9EF2               	bcf	4082,7,c	;volatile
   888                           
   889                           ;newmain.c: 118:     INT0IE=0;
   890   000616  98F2               	bcf	4082,4,c	;volatile
   891                           
   892                           ;newmain.c: 119:     INT1IE=0;
   893   000618  96F0               	bcf	4080,3,c	;volatile
   894                           
   895                           ;newmain.c: 120:     INT2IE=0;
   896   00061A  98F0               	bcf	4080,4,c	;volatile
   897   00061C                     
   898                           ;newmain.c: 121:     lcdcmd(0x01);
   899   00061C  0E01               	movlw	1
   900   00061E  ECA1  F004         	call	i2_lcdcmd
   901   000622                     i2l967:
   902                           
   903                           ;newmain.c: 124:   {;newmain.c: 126: PORTBbits.RB4=0;
   904   000622  9881               	bcf	129,4,c	;volatile
   905   000624                     
   906                           ;newmain.c: 127: PORTBbits.RB5=1;
   907   000624  8A81               	bsf	129,5,c	;volatile
   908   000626                     
   909                           ;newmain.c: 128: PORTBbits.RB6=1;
   910   000626  8C81               	bsf	129,6,c	;volatile
   911   000628                     
   912                           ;newmain.c: 129: PORTBbits.RB7=1;
   913   000628  8E81               	bsf	129,7,c	;volatile
   914   00062A                     
   915                           ;newmain.c: 131: if(PORTBbits.RB0==0)
   916   00062A  B081               	btfsc	129,0,c	;volatile
   917   00062C  EF1A  F003         	goto	i2u21_41
   918   000630  EF1C  F003         	goto	i2u21_40
   919   000634                     i2u21_41:
   920   000634  EF24  F003         	goto	i2l73
   921   000638                     i2u21_40:
   922   000638                     
   923                           ;newmain.c: 132: {;newmain.c: 133:     lcdcmd(0x80);
   924   000638  0E80               	movlw	128
   925   00063A  ECA1  F004         	call	i2_lcdcmd
   926                           
   927                           ;newmain.c: 134:     lcddata('1');
   928   00063E  0E31               	movlw	49
   929   000640  EC96  F004         	call	i2_lcddata
   930                           
   931                           ;newmain.c: 135:     break;
   932   000644  EFD3  F003         	goto	i2l74
   933   000648                     i2l73:
   934                           
   935                           ;newmain.c: 137:  if(PORTBbits.RB1==0)
   936   000648  B281               	btfsc	129,1,c	;volatile
   937   00064A  EF29  F003         	goto	i2u22_41
   938   00064E  EF2B  F003         	goto	i2u22_40
   939   000652                     i2u22_41:
   940   000652  EF33  F003         	goto	i2l75
   941   000656                     i2u22_40:
   942   000656                     
   943                           ;newmain.c: 138: {;newmain.c: 139:      lcdcmd(0x80);
   944   000656  0E80               	movlw	128
   945   000658  ECA1  F004         	call	i2_lcdcmd
   946                           
   947                           ;newmain.c: 140:     lcddata('2');
   948   00065C  0E32               	movlw	50
   949   00065E  EC96  F004         	call	i2_lcddata
   950                           
   951                           ;newmain.c: 141:     break;
   952   000662  EFD3  F003         	goto	i2l74
   953   000666                     i2l75:
   954                           
   955                           ;newmain.c: 143:      if(PORTBbits.RB2==0)
   956   000666  B481               	btfsc	129,2,c	;volatile
   957   000668  EF38  F003         	goto	i2u23_41
   958   00066C  EF3A  F003         	goto	i2u23_40
   959   000670                     i2u23_41:
   960   000670  EF42  F003         	goto	i2l76
   961   000674                     i2u23_40:
   962   000674                     
   963                           ;newmain.c: 144: {;newmain.c: 145:          lcdcmd(0x80);
   964   000674  0E80               	movlw	128
   965   000676  ECA1  F004         	call	i2_lcdcmd
   966                           
   967                           ;newmain.c: 146:     lcddata('3');
   968   00067A  0E33               	movlw	51
   969   00067C  EC96  F004         	call	i2_lcddata
   970                           
   971                           ;newmain.c: 147:     break;
   972   000680  EFD3  F003         	goto	i2l74
   973   000684                     i2l76:
   974                           
   975                           ;newmain.c: 151: PORTBbits.RB4=1;
   976   000684  8881               	bsf	129,4,c	;volatile
   977                           
   978                           ;newmain.c: 152: PORTBbits.RB5=0;
   979   000686  9A81               	bcf	129,5,c	;volatile
   980                           
   981                           ;newmain.c: 153: PORTBbits.RB6=1;
   982   000688  8C81               	bsf	129,6,c	;volatile
   983                           
   984                           ;newmain.c: 154: PORTBbits.RB7=1;
   985   00068A  8E81               	bsf	129,7,c	;volatile
   986                           
   987                           ;newmain.c: 156: if(PORTBbits.RB0==0)
   988   00068C  B081               	btfsc	129,0,c	;volatile
   989   00068E  EF4B  F003         	goto	i2u24_41
   990   000692  EF4D  F003         	goto	i2u24_40
   991   000696                     i2u24_41:
   992   000696  EF55  F003         	goto	i2l77
   993   00069A                     i2u24_40:
   994   00069A                     
   995                           ;newmain.c: 157: {;newmain.c: 158:     lcdcmd(0x80);
   996   00069A  0E80               	movlw	128
   997   00069C  ECA1  F004         	call	i2_lcdcmd
   998                           
   999                           ;newmain.c: 159:     lcddata('4');
  1000   0006A0  0E34               	movlw	52
  1001   0006A2  EC96  F004         	call	i2_lcddata
  1002                           
  1003                           ;newmain.c: 160:     break;
  1004   0006A6  EFD3  F003         	goto	i2l74
  1005   0006AA                     i2l77:
  1006                           
  1007                           ;newmain.c: 162:  if(PORTBbits.RB1==0)
  1008   0006AA  B281               	btfsc	129,1,c	;volatile
  1009   0006AC  EF5A  F003         	goto	i2u25_41
  1010   0006B0  EF5C  F003         	goto	i2u25_40
  1011   0006B4                     i2u25_41:
  1012   0006B4  EF64  F003         	goto	i2l78
  1013   0006B8                     i2u25_40:
  1014   0006B8                     
  1015                           ;newmain.c: 163: {;newmain.c: 164:      lcdcmd(0x80);
  1016   0006B8  0E80               	movlw	128
  1017   0006BA  ECA1  F004         	call	i2_lcdcmd
  1018                           
  1019                           ;newmain.c: 165:     lcddata('5');
  1020   0006BE  0E35               	movlw	53
  1021   0006C0  EC96  F004         	call	i2_lcddata
  1022                           
  1023                           ;newmain.c: 166:     break;
  1024   0006C4  EFD3  F003         	goto	i2l74
  1025   0006C8                     i2l78:
  1026                           
  1027                           ;newmain.c: 168:      if(PORTBbits.RB2==0)
  1028   0006C8  B481               	btfsc	129,2,c	;volatile
  1029   0006CA  EF69  F003         	goto	i2u26_41
  1030   0006CE  EF6B  F003         	goto	i2u26_40
  1031   0006D2                     i2u26_41:
  1032   0006D2  EF73  F003         	goto	i2l79
  1033   0006D6                     i2u26_40:
  1034   0006D6                     
  1035                           ;newmain.c: 169: {;newmain.c: 170:          lcdcmd(0x80);
  1036   0006D6  0E80               	movlw	128
  1037   0006D8  ECA1  F004         	call	i2_lcdcmd
  1038                           
  1039                           ;newmain.c: 171:     lcddata('6');
  1040   0006DC  0E36               	movlw	54
  1041   0006DE  EC96  F004         	call	i2_lcddata
  1042                           
  1043                           ;newmain.c: 172:     break;
  1044   0006E2  EFD3  F003         	goto	i2l74
  1045   0006E6                     i2l79:
  1046                           
  1047                           ;newmain.c: 176: PORTBbits.RB4=1;
  1048   0006E6  8881               	bsf	129,4,c	;volatile
  1049                           
  1050                           ;newmain.c: 177: PORTBbits.RB5=1;
  1051   0006E8  8A81               	bsf	129,5,c	;volatile
  1052                           
  1053                           ;newmain.c: 178: PORTBbits.RB6=0;
  1054   0006EA  9C81               	bcf	129,6,c	;volatile
  1055                           
  1056                           ;newmain.c: 179: PORTBbits.RB7=1;
  1057   0006EC  8E81               	bsf	129,7,c	;volatile
  1058                           
  1059                           ;newmain.c: 181: if(PORTBbits.RB0==0)
  1060   0006EE  B081               	btfsc	129,0,c	;volatile
  1061   0006F0  EF7C  F003         	goto	i2u27_41
  1062   0006F4  EF7E  F003         	goto	i2u27_40
  1063   0006F8                     i2u27_41:
  1064   0006F8  EF86  F003         	goto	i2l80
  1065   0006FC                     i2u27_40:
  1066   0006FC                     
  1067                           ;newmain.c: 182: {;newmain.c: 183:     lcdcmd(0x80);
  1068   0006FC  0E80               	movlw	128
  1069   0006FE  ECA1  F004         	call	i2_lcdcmd
  1070                           
  1071                           ;newmain.c: 184:     lcddata('7');
  1072   000702  0E37               	movlw	55
  1073   000704  EC96  F004         	call	i2_lcddata
  1074                           
  1075                           ;newmain.c: 185:     break;
  1076   000708  EFD3  F003         	goto	i2l74
  1077   00070C                     i2l80:
  1078                           
  1079                           ;newmain.c: 187:  if(PORTBbits.RB1==0)
  1080   00070C  B281               	btfsc	129,1,c	;volatile
  1081   00070E  EF8B  F003         	goto	i2u28_41
  1082   000712  EF8D  F003         	goto	i2u28_40
  1083   000716                     i2u28_41:
  1084   000716  EF95  F003         	goto	i2l81
  1085   00071A                     i2u28_40:
  1086   00071A                     
  1087                           ;newmain.c: 188: {;newmain.c: 189:      lcdcmd(0x80);
  1088   00071A  0E80               	movlw	128
  1089   00071C  ECA1  F004         	call	i2_lcdcmd
  1090                           
  1091                           ;newmain.c: 190:     lcddata('8');
  1092   000720  0E38               	movlw	56
  1093   000722  EC96  F004         	call	i2_lcddata
  1094                           
  1095                           ;newmain.c: 191:     break;
  1096   000726  EFD3  F003         	goto	i2l74
  1097   00072A                     i2l81:
  1098                           
  1099                           ;newmain.c: 193:      if(PORTBbits.RB2==0)
  1100   00072A  B481               	btfsc	129,2,c	;volatile
  1101   00072C  EF9A  F003         	goto	i2u29_41
  1102   000730  EF9C  F003         	goto	i2u29_40
  1103   000734                     i2u29_41:
  1104   000734  EFA4  F003         	goto	i2l82
  1105   000738                     i2u29_40:
  1106   000738                     
  1107                           ;newmain.c: 194: {;newmain.c: 195:          lcdcmd(0x80);
  1108   000738  0E80               	movlw	128
  1109   00073A  ECA1  F004         	call	i2_lcdcmd
  1110                           
  1111                           ;newmain.c: 196:     lcddata('9');
  1112   00073E  0E39               	movlw	57
  1113   000740  EC96  F004         	call	i2_lcddata
  1114                           
  1115                           ;newmain.c: 197:     break;
  1116   000744  EFD3  F003         	goto	i2l74
  1117   000748                     i2l82:
  1118                           
  1119                           ;newmain.c: 201: PORTBbits.RB4=1;
  1120   000748  8881               	bsf	129,4,c	;volatile
  1121                           
  1122                           ;newmain.c: 202: PORTBbits.RB5=1;
  1123   00074A  8A81               	bsf	129,5,c	;volatile
  1124                           
  1125                           ;newmain.c: 203: PORTBbits.RB6=1;
  1126   00074C  8C81               	bsf	129,6,c	;volatile
  1127                           
  1128                           ;newmain.c: 204: PORTBbits.RB7=0;
  1129   00074E  9E81               	bcf	129,7,c	;volatile
  1130                           
  1131                           ;newmain.c: 206: if(PORTBbits.RB0==0)
  1132   000750  B081               	btfsc	129,0,c	;volatile
  1133   000752  EFAD  F003         	goto	i2u30_41
  1134   000756  EFAF  F003         	goto	i2u30_40
  1135   00075A                     i2u30_41:
  1136   00075A  EFB7  F003         	goto	i2l83
  1137   00075E                     i2u30_40:
  1138   00075E                     
  1139                           ;newmain.c: 207: {;newmain.c: 208:     lcdcmd(0x80);
  1140   00075E  0E80               	movlw	128
  1141   000760  ECA1  F004         	call	i2_lcdcmd
  1142                           
  1143                           ;newmain.c: 209:     lcddata('*');
  1144   000764  0E2A               	movlw	42
  1145   000766  EC96  F004         	call	i2_lcddata
  1146                           
  1147                           ;newmain.c: 210:     break;
  1148   00076A  EFD3  F003         	goto	i2l74
  1149   00076E                     i2l83:
  1150                           
  1151                           ;newmain.c: 212:  if(PORTBbits.RB1==0)
  1152   00076E  B281               	btfsc	129,1,c	;volatile
  1153   000770  EFBC  F003         	goto	i2u31_41
  1154   000774  EFBE  F003         	goto	i2u31_40
  1155   000778                     i2u31_41:
  1156   000778  EFC6  F003         	goto	i2l84
  1157   00077C                     i2u31_40:
  1158   00077C                     
  1159                           ;newmain.c: 213: {;newmain.c: 214:      lcdcmd(0x80);
  1160   00077C  0E80               	movlw	128
  1161   00077E  ECA1  F004         	call	i2_lcdcmd
  1162                           
  1163                           ;newmain.c: 215:     lcddata('0');
  1164   000782  0E30               	movlw	48
  1165   000784  EC96  F004         	call	i2_lcddata
  1166                           
  1167                           ;newmain.c: 216:     break;
  1168   000788  EFD3  F003         	goto	i2l74
  1169   00078C                     i2l84:
  1170                           
  1171                           ;newmain.c: 218:      if(PORTBbits.RB2==0)
  1172   00078C  B481               	btfsc	129,2,c	;volatile
  1173   00078E  EFCB  F003         	goto	i2u32_41
  1174   000792  EFCD  F003         	goto	i2u32_40
  1175   000796                     i2u32_41:
  1176   000796  EF11  F003         	goto	i2l967
  1177   00079A                     i2u32_40:
  1178   00079A                     
  1179                           ;newmain.c: 219: {;newmain.c: 220:          lcdcmd(0x80);
  1180   00079A  0E80               	movlw	128
  1181   00079C  ECA1  F004         	call	i2_lcdcmd
  1182                           
  1183                           ;newmain.c: 221:     lcddata('#');
  1184   0007A0  0E23               	movlw	35
  1185   0007A2  EC96  F004         	call	i2_lcddata
  1186   0007A6                     i2l74:
  1187                           
  1188                           ;newmain.c: 225:     PORTBbits.RB4=0;
  1189   0007A6  9881               	bcf	129,4,c	;volatile
  1190                           
  1191                           ;newmain.c: 226: PORTBbits.RB5=0;
  1192   0007A8  9A81               	bcf	129,5,c	;volatile
  1193                           
  1194                           ;newmain.c: 227: PORTBbits.RB6=0;
  1195   0007AA  9C81               	bcf	129,6,c	;volatile
  1196                           
  1197                           ;newmain.c: 228: PORTBbits.RB7=0;
  1198   0007AC  9E81               	bcf	129,7,c	;volatile
  1199   0007AE                     
  1200                           ;newmain.c: 231: _delay((unsigned long)((500)*(4000000/4000.0)));
  1201   0007AE  0E03               	movlw	3
  1202   0007B0  6E03               	movwf	(??_key_detect+1)^0,c
  1203   0007B2  0E8A               	movlw	138
  1204   0007B4  6E02               	movwf	??_key_detect^0,c
  1205   0007B6  0E56               	movlw	86
  1206   0007B8                     i2u45_47:
  1207   0007B8  2EE8               	decfsz	wreg,f,c
  1208   0007BA  D7FE               	bra	i2u45_47
  1209   0007BC  2E02               	decfsz	??_key_detect^0,f,c
  1210   0007BE  D7FC               	bra	i2u45_47
  1211   0007C0  2E03               	decfsz	(??_key_detect+1)^0,f,c
  1212   0007C2  D7FA               	bra	i2u45_47
  1213   0007C4                     
  1214                           ;newmain.c: 233:     INT0IE=1;
  1215   0007C4  88F2               	bsf	4082,4,c	;volatile
  1216   0007C6                     
  1217                           ;newmain.c: 234:     INT1IE=1;
  1218   0007C6  86F0               	bsf	4080,3,c	;volatile
  1219   0007C8                     
  1220                           ;newmain.c: 235:     INT2IE=1;
  1221   0007C8  88F0               	bsf	4080,4,c	;volatile
  1222   0007CA                     
  1223                           ;newmain.c: 237:     INT0IF=0;
  1224   0007CA  92F2               	bcf	4082,1,c	;volatile
  1225   0007CC                     
  1226                           ;newmain.c: 238:     INT1IF=0;
  1227   0007CC  90F0               	bcf	4080,0,c	;volatile
  1228   0007CE                     
  1229                           ;newmain.c: 239:     INT2IF=0;
  1230   0007CE  92F0               	bcf	4080,1,c	;volatile
  1231   0007D0                     
  1232                           ;newmain.c: 240:     GIE=1;
  1233   0007D0  8EF2               	bsf	4082,7,c	;volatile
  1234   0007D2  0012               	return		;funcret
  1235   0007D4                     __end_of_key_detect:
  1236                           	callstack 0
  1237                           
  1238 ;; *************** function i2_lcddata *****************
  1239 ;; Defined at:
  1240 ;;		line 75 in file "newmain.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  data            1    wreg     unsigned char 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  data            1    0[COMRAM] unsigned char 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, status,2, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1254 ;;      Params:         0       0       0       0       0       0       0
  1255 ;;      Locals:         1       0       0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0
  1257 ;;      Totals:         1       0       0       0       0       0       0
  1258 ;;Total ram usage:        1 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_key_detect
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text7
  1268   00092C                     __ptext7:
  1269                           	callstack 0
  1270   00092C                     i2_lcddata:
  1271                           	callstack 26
  1272                           
  1273                           ;incstack = 0
  1274                           ;i2lcddata@data stored from wreg
  1275   00092C  6E01               	movwf	i2lcddata@data^0,c
  1276   00092E                     
  1277                           ;newmain.c: 75: void lcddata(unsigned char data);newmain.c: 76: {;newmain.c: 77:  PORTD=
      +                          data;
  1278   00092E  C001  FF83         	movff	i2lcddata@data,3971	;volatile
  1279   000932                     
  1280                           ;newmain.c: 78:  PORTCbits.RC1=1;
  1281   000932  8282               	bsf	130,1,c	;volatile
  1282   000934                     
  1283                           ;newmain.c: 79:  PORTCbits.RC3=1;
  1284   000934  8682               	bsf	130,3,c	;volatile
  1285   000936                     
  1286                           ;newmain.c: 80:  _delay((unsigned long)((1)*(4000000/4000.0)));
  1287   000936  0EC8               	movlw	200
  1288   000938                     i2u46_47:
  1289   000938  D000               	nop2	
  1290   00093A  2EE8               	decfsz	wreg,f,c
  1291   00093C  D7FD               	bra	i2u46_47
  1292   00093E                     
  1293                           ;newmain.c: 81:  PORTCbits.RC3=0;
  1294   00093E  9682               	bcf	130,3,c	;volatile
  1295   000940  0012               	return		;funcret
  1296   000942                     __end_ofi2_lcddata:
  1297                           	callstack 0
  1298                           
  1299 ;; *************** function i2_lcdcmd *****************
  1300 ;; Defined at:
  1301 ;;		line 65 in file "newmain.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  command         1    wreg     unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  command         1    0[COMRAM] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1315 ;;      Params:         0       0       0       0       0       0       0
  1316 ;;      Locals:         1       0       0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0       0       0
  1318 ;;      Totals:         1       0       0       0       0       0       0
  1319 ;;Total ram usage:        1 bytes
  1320 ;; Hardware stack levels used: 1
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_key_detect
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text8
  1329   000942                     __ptext8:
  1330                           	callstack 0
  1331   000942                     i2_lcdcmd:
  1332                           	callstack 26
  1333                           
  1334                           ;incstack = 0
  1335                           ;i2lcdcmd@command stored from wreg
  1336   000942  6E01               	movwf	i2lcdcmd@command^0,c
  1337   000944                     
  1338                           ;newmain.c: 65: void lcdcmd(unsigned char command);newmain.c: 66: {;newmain.c: 67:  PORT
      +                          D=command;
  1339   000944  C001  FF83         	movff	i2lcdcmd@command,3971	;volatile
  1340   000948                     
  1341                           ;newmain.c: 68:  PORTCbits.RC1=0;
  1342   000948  9282               	bcf	130,1,c	;volatile
  1343   00094A                     
  1344                           ;newmain.c: 69:  PORTCbits.RC3=1;
  1345   00094A  8682               	bsf	130,3,c	;volatile
  1346   00094C                     
  1347                           ;newmain.c: 70:  _delay((unsigned long)((1)*(4000000/4000.0)));
  1348   00094C  0EC8               	movlw	200
  1349   00094E                     i2u47_47:
  1350   00094E  D000               	nop2	
  1351   000950  2EE8               	decfsz	wreg,f,c
  1352   000952  D7FD               	bra	i2u47_47
  1353   000954                     
  1354                           ;newmain.c: 71:  PORTCbits.RC3=0;
  1355   000954  9682               	bcf	130,3,c	;volatile
  1356   000956  0012               	return		;funcret
  1357   000958                     __end_ofi2_lcdcmd:
  1358                           	callstack 0
  1359                           
  1360                           	psect	rparam
  1361   000001                     ___rparam_used  equ	1
  1362   000000                     ___param_bank   equ	0
  1363   000000                     __Lparam        equ	__Lrparam
  1364   000000                     __Hparam        equ	__Hrparam
  1365                           
  1366                           	psect	temp
  1367   000006                     btemp:
  1368                           	callstack 0
  1369   000006                     	ds	1
  1370   000006                     int$flags       set	btemp
  1371   000007                     wtemp8          set	btemp+1
  1372   000007                     ttemp5          set	btemp+1
  1373   00000A                     ttemp6          set	btemp+4
  1374   00000E                     ttemp7          set	btemp+8
  1375                           
  1376                           	psect	idloc
  1377                           
  1378                           ;Config register IDLOC0 @ 0x200000
  1379                           ;	unspecified, using default values
  1380   200000                     	org	2097152
  1381   200000  FF                 	db	255
  1382                           
  1383                           ;Config register IDLOC1 @ 0x200001
  1384                           ;	unspecified, using default values
  1385   200001                     	org	2097153
  1386   200001  FF                 	db	255
  1387                           
  1388                           ;Config register IDLOC2 @ 0x200002
  1389                           ;	unspecified, using default values
  1390   200002                     	org	2097154
  1391   200002  FF                 	db	255
  1392                           
  1393                           ;Config register IDLOC3 @ 0x200003
  1394                           ;	unspecified, using default values
  1395   200003                     	org	2097155
  1396   200003  FF                 	db	255
  1397                           
  1398                           ;Config register IDLOC4 @ 0x200004
  1399                           ;	unspecified, using default values
  1400   200004                     	org	2097156
  1401   200004  FF                 	db	255
  1402                           
  1403                           ;Config register IDLOC5 @ 0x200005
  1404                           ;	unspecified, using default values
  1405   200005                     	org	2097157
  1406   200005  FF                 	db	255
  1407                           
  1408                           ;Config register IDLOC6 @ 0x200006
  1409                           ;	unspecified, using default values
  1410   200006                     	org	2097158
  1411   200006  FF                 	db	255
  1412                           
  1413                           ;Config register IDLOC7 @ 0x200007
  1414                           ;	unspecified, using default values
  1415   200007                     	org	2097159
  1416   200007  FF                 	db	255
  1417                           
  1418                           	psect	config
  1419                           
  1420                           ; Padding undefined space
  1421   300000                     	org	3145728
  1422   300000  FF                 	db	255
  1423                           
  1424                           ;Config register CONFIG1H @ 0x300001
  1425                           ;	Oscillator Selection bits
  1426                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1427                           ;	Fail-Safe Clock Monitor Enable bit
  1428                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1429                           ;	Internal/External Oscillator Switchover bit
  1430                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1431   300001                     	org	3145729
  1432   300001  08                 	db	8
  1433                           
  1434                           ;Config register CONFIG2L @ 0x300002
  1435                           ;	Power-up Timer Enable bit
  1436                           ;	PWRT = ON, PWRT enabled
  1437                           ;	Brown-out Reset Enable bits
  1438                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1439                           ;	Brown Out Reset Voltage bits
  1440                           ;	BORV = 0x3, unprogrammed default
  1441   300002                     	org	3145730
  1442   300002  18                 	db	24
  1443                           
  1444                           ;Config register CONFIG2H @ 0x300003
  1445                           ;	Watchdog Timer Enable bit
  1446                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1447                           ;	Watchdog Timer Postscale Select bits
  1448                           ;	WDTPS = 0xF, unprogrammed default
  1449   300003                     	org	3145731
  1450   300003  1E                 	db	30
  1451                           
  1452                           ; Padding undefined space
  1453   300004                     	org	3145732
  1454   300004  FF                 	db	255
  1455                           
  1456                           ;Config register CONFIG3H @ 0x300005
  1457                           ;	CCP2 MUX bit
  1458                           ;	CCP2MX = PORTBE, CCP2 input/output is multiplexed with RB3
  1459                           ;	PORTB A/D Enable bit
  1460                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1461                           ;	Low-Power Timer1 Oscillator Enable bit
  1462                           ;	LPT1OSC = 0x0, unprogrammed default
  1463                           ;	MCLR Pin Enable bit
  1464                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1465   300005                     	org	3145733
  1466   300005  00                 	db	0
  1467                           
  1468                           ;Config register CONFIG4L @ 0x300006
  1469                           ;	Stack Full/Underflow Reset Enable bit
  1470                           ;	STVREN = 0x1, unprogrammed default
  1471                           ;	Single-Supply ICSP Enable bit
  1472                           ;	LVP = OFF, Single-Supply ICSP disabled
  1473                           ;	Extended Instruction Set Enable bit
  1474                           ;	XINST = 0x0, unprogrammed default
  1475                           ;	Background Debugger Enable bit
  1476                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1477   300006                     	org	3145734
  1478   300006  81                 	db	129
  1479                           
  1480                           ; Padding undefined space
  1481   300007                     	org	3145735
  1482   300007  FF                 	db	255
  1483                           
  1484                           ;Config register CONFIG5L @ 0x300008
  1485                           ;	Code Protection bit
  1486                           ;	CP0 = ON, Block 0 (000800-001FFFh) code-protected
  1487                           ;	Code Protection bit
  1488                           ;	CP1 = ON, Block 1 (002000-003FFFh) code-protected
  1489                           ;	Code Protection bit
  1490                           ;	CP2 = ON, Block 2 (004000-005FFFh) code-protected
  1491                           ;	Code Protection bit
  1492                           ;	CP3 = ON, Block 3 (006000-007FFFh) code-protected
  1493   300008                     	org	3145736
  1494   300008  00                 	db	0
  1495                           
  1496                           ;Config register CONFIG5H @ 0x300009
  1497                           ;	Boot Block Code Protection bit
  1498                           ;	CPB = ON, Boot block (000000-0007FFh) code-protected
  1499                           ;	Data EEPROM Code Protection bit
  1500                           ;	CPD = ON, Data EEPROM code-protected
  1501   300009                     	org	3145737
  1502   300009  00                 	db	0
  1503                           
  1504                           ;Config register CONFIG6L @ 0x30000A
  1505                           ;	unspecified, using default values
  1506                           ;	Write Protection bit
  1507                           ;	WRT0 = 0x1, unprogrammed default
  1508                           ;	Write Protection bit
  1509                           ;	WRT1 = 0x1, unprogrammed default
  1510                           ;	Write Protection bit
  1511                           ;	WRT2 = 0x1, unprogrammed default
  1512                           ;	Write Protection bit
  1513                           ;	WRT3 = 0x1, unprogrammed default
  1514   30000A                     	org	3145738
  1515   30000A  0F                 	db	15
  1516                           
  1517                           ;Config register CONFIG6H @ 0x30000B
  1518                           ;	Configuration Register Write Protection bit
  1519                           ;	WRTC = 0x1, unprogrammed default
  1520                           ;	Boot Block Write Protection bit
  1521                           ;	WRTB = 0x1, unprogrammed default
  1522                           ;	Data EEPROM Write Protection bit
  1523                           ;	WRTD = OFF, Data EEPROM not write-protected
  1524   30000B                     	org	3145739
  1525   30000B  E0                 	db	224
  1526                           
  1527                           ;Config register CONFIG7L @ 0x30000C
  1528                           ;	Table Read Protection bit
  1529                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1530                           ;	Table Read Protection bit
  1531                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1532                           ;	Table Read Protection bit
  1533                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1534                           ;	Table Read Protection bit
  1535                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1536   30000C                     	org	3145740
  1537   30000C  0F                 	db	15
  1538                           
  1539                           ;Config register CONFIG7H @ 0x30000D
  1540                           ;	Boot Block Table Read Protection bit
  1541                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1542   30000D                     	org	3145741
  1543   30000D  40                 	db	64
  1544                           tosu	equ	0xFFF
  1545                           tosh	equ	0xFFE
  1546                           tosl	equ	0xFFD
  1547                           stkptr	equ	0xFFC
  1548                           pclatu	equ	0xFFB
  1549                           pclath	equ	0xFFA
  1550                           pcl	equ	0xFF9
  1551                           tblptru	equ	0xFF8
  1552                           tblptrh	equ	0xFF7
  1553                           tblptrl	equ	0xFF6
  1554                           tablat	equ	0xFF5
  1555                           prodh	equ	0xFF4
  1556                           prodl	equ	0xFF3
  1557                           indf0	equ	0xFEF
  1558                           postinc0	equ	0xFEE
  1559                           postdec0	equ	0xFED
  1560                           preinc0	equ	0xFEC
  1561                           plusw0	equ	0xFEB
  1562                           fsr0h	equ	0xFEA
  1563                           fsr0l	equ	0xFE9
  1564                           wreg	equ	0xFE8
  1565                           indf1	equ	0xFE7
  1566                           postinc1	equ	0xFE6
  1567                           postdec1	equ	0xFE5
  1568                           preinc1	equ	0xFE4
  1569                           plusw1	equ	0xFE3
  1570                           fsr1h	equ	0xFE2
  1571                           fsr1l	equ	0xFE1
  1572                           bsr	equ	0xFE0
  1573                           indf2	equ	0xFDF
  1574                           postinc2	equ	0xFDE
  1575                           postdec2	equ	0xFDD
  1576                           preinc2	equ	0xFDC
  1577                           plusw2	equ	0xFDB
  1578                           fsr2h	equ	0xFDA
  1579                           fsr2l	equ	0xFD9
  1580                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      5       5
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_string@Spointer	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_lcd_string
    _main->_lcdinit
    _lcdinit->_lcdcmd
    _lcd_string->_lcddata

Critical Paths under _my_routine in COMRAM

    _my_routine->_key_detect
    _key_detect->i2_lcdcmd
    _key_detect->i2_lcddata

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_routine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_routine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_routine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_routine in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      76
                         _lcd_string
                            _lcdinit
 ---------------------------------------------------------------------------------
 (1) _lcdinit                                              1     1      0      15
                                              4 COMRAM     1     1      0
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (2) _lcdcmd                                               1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           1     0      1      61
                                              4 COMRAM     1     0      1
                            _lcddata
 ---------------------------------------------------------------------------------
 (2) _lcddata                                              1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _my_routine                                           0     0      0      58
                         _key_detect
 ---------------------------------------------------------------------------------
 (4) _key_detect                                           2     2      0      58
                                              1 COMRAM     2     2      0
                           i2_lcdcmd
                          i2_lcddata
 ---------------------------------------------------------------------------------
 (5) i2_lcddata                                            1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) i2_lcdcmd                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_string
     _lcddata
   _lcdinit
     _lcdcmd

 _my_routine (ROOT)
   _key_detect
     i2_lcdcmd
     i2_lcddata

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM          126      0       0      0.0%
BITBANK0           128      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBIGSFRh         126      0       0      0.0%
BITBIGSFRl           1      0       0      0.0%
COMRAM             126      5       5      4.0%
BANK0              128      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BIGRAM            1535      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       5      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Mar 27 19:10:36 2025

                     l52 08FE                       l61 0892                       l55 0914  
                     l58 092A                       l92 08CC                       l93 08CC  
                    l821 0840                      l831 088C                      l823 0850  
                    l825 0864                      l771 0918                      l827 086A  
                    l819 083A                      l773 091C                      l781 0902  
                    l829 087E                      l775 091E                      l783 0906  
                    l777 0920                      l961 08E6                      l785 0908  
                    l779 0928                      l955 08D4                      l787 090A  
                    l957 08D8                      l789 0912                      l959 08E4  
                    _GIE 7F97                      u200 08FE                      u201 08FA  
                    u407 085C                      u417 0870                      u427 0884  
                    u437 090C                      u447 0922                      u397 0846  
            lcddata@data 0004                      wreg 0FE8                     l1041 08A4  
                   l1051 08B6                     l1043 08A6                     l1035 0894  
                   l1061 08C0                     l1053 08B8                     l1045 08A8  
                   l1037 089C                     l1063 08C4                     l1055 08BA  
                   l1047 08B2                     l1039 08A2                     l1057 08BC  
                   l1049 08B4                     l1059 08BE                     STR_1 0601  
                   i2l55 0956                     i2l80 070C                     i2l81 072A  
                   i2l73 0648                     i2l58 0940                     i2l82 0748  
                   i2l74 07A6                     i2l83 076E                     i2l75 0666  
                   i2l84 078C                     i2l76 0684                     i2l77 06AA  
                   i2l69 0836                     i2l78 06C8                     i2l87 07D2  
                   i2l79 06E6                     _main 0894                     btemp 0006  
                   start 000E             ___param_bank 0000                    ?_main 0001  
                  i2l941 094C                    i2l943 0954                    i2l935 0944  
                  i2l951 0936                    i2l937 0948                    i2l953 093E  
                  i2l945 092E                    i2l939 094A                    i2l947 0932  
                  i2l971 0626                    i2l963 0614                    i2l949 0934  
                  i2l981 0674                    i2l973 0628                    i2l965 061C  
                  i2l991 071A                    i2l983 069A                    i2l975 062A  
                  i2l967 0622                    i2l993 0738                    i2l985 06B8  
                  i2l977 0638                    i2l969 0624                    i2l995 075E  
                  i2l987 06D6                    i2l979 0656                    i2l997 077C  
                  i2l989 06FC                    i2l999 079A            lcdcmd@command 0004  
                  _PORTC 0F82                    _PORTD 0F83                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95          __end_of_lcddata 092C  
        __end_of_lcdinit 0894                    tablat 0FF5                    ttemp5 0007  
                  ttemp6 000A                    ttemp7 000E                    status 0FD8  
                  wtemp8 0007         __end_ofi2_lcdcmd 0958          __initialization 0958  
           __end_of_main 08D4                   ??_main 0006            __activetblptr 0001  
                 _ADCON1 0FC1                   _INT0IE 7F94                   _INT0IF 7F91  
                 _INT1IE 7F83                   _INT1IF 7F80                   _INT2IE 7F84  
                 _INT2IF 7F81                   i2l1001 07AE                   i2l1011 07CC  
                 i2l1003 07C4                   i2l1013 07CE                   i2l1005 07C6  
                 i2l1021 07F2                   i2l1015 07D0                   i2l1007 07C8  
                 i2l1031 0824                   i2l1023 07F6                   i2l1009 07CA  
                 i2l1033 0832                   i2l1025 0804                   i2l1017 07D6  
                 i2l1027 0812                   i2l1019 07E4                   i2l1029 0816  
                 _OSCCON 0FD3                   _lcdcmd 0900                   isa$std 0001  
              ??_lcddata 0004                ??_lcdinit 0005             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
      __end_ofi2_lcddata 0942               __accesstop 0080  __end_of__initialization 0958  
          ___rparam_used 0001           __pcstackCOMRAM 0001                ?i2_lcdcmd 0001  
                ?_lcdcmd 0001               ??i2_lcdcmd 0001                  _INTCON2 0FF1  
                _INTCON3 0FF0                  i2u21_40 0638                  i2u21_41 0634  
                i2u30_40 075E                  i2u22_40 0656                  i2u30_41 075A  
                i2u22_41 0652                  i2u31_40 077C                  i2u23_40 0674  
                i2u31_41 0778                  i2u23_41 0670                  i2u32_40 079A  
                i2u24_40 069A                  i2u32_41 0796                  i2u24_41 0696  
                i2u25_40 06B8                  i2u33_40 07E4                  i2u25_41 06B4  
                i2u33_41 07E0                  i2u26_40 06D6                  i2u34_40 07F2  
                i2u26_41 06D2                  i2u34_41 07EE                  i2u27_40 06FC  
                i2u35_40 0804                  i2u27_41 06F8                  i2u35_41 0800  
                i2u28_40 071A                  i2u36_40 0812                  i2u28_41 0716  
                i2u36_41 080E                  i2u29_40 0738                  i2u37_40 0824  
                i2u29_41 0734                  i2u37_41 0820                  i2u45_47 07B8  
                i2u38_40 0832                  i2u38_41 082E                  i2u46_47 0938  
                i2u47_47 094E               _lcd_string 08D4                  __Hparam 0000  
                __Lparam 0000               _key_detect 0614             __psmallconst 0600  
                __pcinit 0958                  __ramtop 0600                  __ptext0 0894  
                __ptext1 083A                  __ptext2 0900                  __ptext3 08D4  
                __ptext4 0916                  __ptext6 0614                  __ptext7 092C  
                __ptext8 0942                  _lcddata 0916                  _lcdinit 083A  
         __pintcode_body 07D4     end_of_initialization 0958                  int_func 07D4  
             _my_routine 0008                _PORTBbits 0F81                _PORTCbits 0F82  
            ?_lcd_string 0005          i2lcdcmd@command 0001                i2_lcddata 092C  
            ?_key_detect 0001           __end_of_lcdcmd 0916      start_initialization 0958  
             ?i2_lcddata 0001                 ??_lcdcmd 0004              ?_my_routine 0001  
          i2lcddata@data 0001                __pintcode 0008                 ?_lcddata 0001  
               ?_lcdinit 0001              __smallconst 0600              ??i2_lcddata 0001  
               i2_lcdcmd 0942             ??_lcd_string 0006              _INTCON3bits 0FF0  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0600  
           ??_key_detect 0002       __end_of_lcd_string 0900       __end_of_key_detect 07D4  
     lcd_string@Spointer 0005                 isa$xinst 0000                 int$flags 0006  
           ??_my_routine 0004               _INTCONbits 0FF2                 intlevel2 0000  
     __end_of_my_routine 083A  
